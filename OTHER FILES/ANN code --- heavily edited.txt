import pandas as pd
import numpy as np
import keras
df=pd.read_csv("cmonBruh.csv")
df.head()

df['other_column']=df['fthg']+df['ftag']
df.head()

def betting(dl):
    if dl > 2.5: return 1
    else: return 0
df["Code"] = df['other_column'].map(betting)
df.head(20)

import numpy as np
x=np.array([df['odd_h'], df['odd_d'], df['odd_a']])
y=np.array([df['Code']])

# Create first network with Keras
from keras.models import Sequential
from keras.layers import Dense
# fix random seed for reproducibility
seed = 7
np.random.seed(seed)

from sklearn.model_selection import train_test_split
train, test = train_test_split(df, test_size=0.2)

x_train=train.iloc[:,3:6]
x_test=test.iloc[:,3:6]
y_train=train.iloc[:,8]
y_test=test.iloc[:,8]

# create model
model = Sequential()
model.add(Dense(12, input_dim=3, activation='relu', kernel_initializer="uniform"))
model.add(Dense(8, activation='relu', kernel_initializer="uniform"))
model.add(Dense(1, activation='sigmoid', kernel_initializer="uniform"))
# Compile model
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
# Fit the model
model.fit(x_train, y_train, epochs=150, batch_size=10,  verbose=2)


score, acc = model.evaluate(x_test, y_test)
print('Test score:', score)
print('Test accuracy:', acc)